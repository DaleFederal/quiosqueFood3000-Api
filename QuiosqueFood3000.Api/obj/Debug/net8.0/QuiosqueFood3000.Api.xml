<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QuiosqueFood3000.Api</name>
    </assembly>
    <members>
        <member name="M:QuiosqueFood3000.Controllers.CustomerController.CustomerByCpf(System.String)">
            <summary>
            Retorna um cliente pelo CPF
            </summary>
            <param name="cpf">CPF do cliente</param>
            <returns>Retorna o cliente correspondente ao CPF fornecido</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.CustomerController.RegisterCustomer(QuiosqueFood3000.Api.DTOs.CustomerDto)">
            <summary>
            Registra um novo cliente
            </summary>
            <param name="customerDto">Dados do cliente a ser registrado</param>
            <returns>Retorna os dados do cliente registrado</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.CustomerController.RemoveCustomer(System.String)">
            <summary>
            Remove um cliente pelo CPF
            </summary>
            <param name="cpf">CPF do cliente a ser removido</param>
            <returns>Retorna uma mensagem de sucesso ou erro</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.CustomerController.UpdateCustomer(QuiosqueFood3000.Api.DTOs.CustomerDto)">
            <summary>
            Atualiza os dados de um cliente
            </summary>
            <param name="customerDto">Dados do cliente a serem atualizados</param>
            <returns>Retorna os dados do cliente atualizado</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.OrderController.OrderById(System.Int32)">
            <summary>
            Retorna um pedido pelo ID
            </summary>
            <param name="id">ID do pedido</param>
            <returns>Retorna o pedido correspondente ao ID fornecido</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.OrderController.GetOrders">
            <summary>
            Retorna todos os pedidos
            </summary>
            <returns>Retorna uma lista de todos os pedidos</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.OrderController.GetOrdersByStatus(QuiosqueFood3000.Domain.Entities.Enums.OrderStatus)">
            <summary>
            Retorna pedidos pelo status
            </summary>
            <param name="orderStatus">Status do pedido</param>
            <returns>Retorna uma lista de pedidos com o status fornecido</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.OrderController.GetPaymentOrdersStatusById(System.Int32)">
            <summary>
            Retorna o status de um pagamento de um pedido pelo id
            </summary>
            <param name="orderId"></param>
            <returns></returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.OrderController.GetCurrentOrders">
            <summary>
            Retorna os pedidos que estão atualmente ativos
            </summary>
            <returns></returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.OrderController.OrderChangeStatus(System.Int32,QuiosqueFood3000.Domain.Entities.Enums.OrderStatus)">
            <summary>
            Troca o status do pedido para o status desejado
            </summary>
            <param name="orderId"></param>
            <param name="newOrderStatus"></param>
            <returns></returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.OrderSolicitationController.GetOrderSolicitationById(System.Int32)">
            <summary>
            Retorna uma solicitação de pedido pelo ID
            </summary>
            <param name="id">ID da solicitação de pedido</param>
            <returns>Retorna a solicitação de pedido correspondente ao ID fornecido</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.OrderSolicitationController.AssociateCustomerToOrderSolicitation(System.Int32,System.String)">
            <summary>
            Associa um cliente a uma solicitação de pedido
            </summary>
            <param name="orderSolicitationId">ID da solicitação de pedido</param>
            <param name="customerCpf">CPF do cliente</param>
            <returns>Retorna a solicitação de pedido atualizada</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.OrderSolicitationController.AssociateAnnonymousIdentificationToOrderSolicitation(System.Int32)">
            <summary>
            Associa uma identificação anônima a uma solicitação de pedido
            </summary>
            <param name="id">ID da solicitação de pedido</param>
            <returns>Retorna a solicitação de pedido atualizada</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.OrderSolicitationController.ConfirmOrderSolicitation(System.Int32)">
            <summary>
            Confirma uma solicitação de pedido
            </summary>
            <param name="id">ID da solicitação de pedido</param>
            <returns>Retorna os dados da remessa confirmada</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.OrderSolicitationController.AddOrderItemToOrder(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Adiciona um item ao pedido
            </summary>
            <param name="productId">ID do produto</param>
            <param name="quantity">Quantidade do produto</param>
            <param name="orderSolicitationId">ID da solicitação de pedido</param>
            <param name="observations">Observações sobre o item</param>
            <returns>Retorna a solicitação de pedido atualizada</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.OrderSolicitationController.RemoveOrderItemToOrder(System.Int32,System.Int32,System.Int32)">
            <summary>
            Remove um item do pedido
            </summary>
            <param name="productId">ID do produto</param>
            <param name="quantity">Quantidade do produto</param>
            <param name="orderSolicitationId">ID da solicitação de pedido</param>
            <returns>Retorna a solicitação de pedido atualizada</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.OrderSolicitationController.InitiateOrderSolicitation">
            <summary>
            Inicia uma nova solicitação de pedido
            </summary>
            <returns>Retorna a solicitação de pedido iniciada</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.ProductController.ProductById(System.Int32)">
            <summary>
            Retorna um produto pelo ID
            </summary>
            <param name="id">ID do produto</param>
            <returns>Retorna o produto correspondente ao ID fornecido</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.ProductController.RegisterProduct(QuiosqueFood3000.Api.DTOs.ProductDto)">
            <summary>
            Registra um novo produto
            </summary>
            <param name="productDto">Dados do produto a ser registrado</param>
            <returns>Retorna os dados do produto registrado</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.ProductController.RemoveProduct(System.Int32)">
            <summary>
            Remove um produto pelo ID
            </summary>
            <param name="id">ID do produto a ser removido</param>
            <returns>Retorna uma mensagem de sucesso ou erro</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.ProductController.UpdateProduct(QuiosqueFood3000.Api.DTOs.ProductDto)">
            <summary>
            Atualiza os dados de um produto
            </summary>
            <param name="productDto">Dados do produto a serem atualizados</param>
            <returns>Retorna os dados do produto atualizado</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.ProductController.GetProductsByCategory(QuiosqueFood3000.Domain.Entities.Enums.ProductCategory)">
            <summary>
            Retorna produtos pela categoria
            </summary>
            <param name="productCategory">Categoria do produto</param>
            <returns>Retorna uma lista de produtos com a categoria fornecida</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.RemittanceController.RemittanceById(System.Int32)">
            <summary>
            Retorna uma remessa pelo ID
            </summary>
            <param name="id">ID da remessa</param>
            <returns>Retorna a remessa correspondente ao ID fornecido</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.RemittanceController.RemittanceByOrderId(System.Int32)">
            <summary>
            Retorna uma remessa pelo ID do pedido
            </summary>
            <param name="orderId">ID do pedido</param>
            <returns>Retorna a remessa correspondente ao ID do pedido fornecido</returns>
        </member>
        <member name="M:QuiosqueFood3000.Controllers.WebhookController.PaymentWebhook(QuiosqueFood3000.Api.DTOs.PaymentDto)">
            <summary>
            Webhook para processar o pagamento
            </summary>
            <param name="paymentDto"></param>
            <returns></returns>
        </member>
    </members>
</doc>
